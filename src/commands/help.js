const { EmbedBuilder } = require('discord.js');

module.exports = {
  name: 'help',
  description: 'Mostra informa√ß√µes sobre comandos',
  usage: '.help [comando]',
  permissions: 'Nenhuma', 
  execute: async (message, args, { client }) => {
    
    if (!client.commands || client.commands.size === 0) {
      return message.reply({
        content: '‚ö†Ô∏è Os comandos n√£o foram carregados corretamente. Verifique a configura√ß√£o do bot.',
        ephemeral: true,
      });
    }

    
    if (args.length > 0) {
      const commandName = args[0].toLowerCase();
      const command = client.commands.get(commandName);

      if (!command) {
        const embedErroMinimo = new EmbedBuilder()
          .setColor('#FF4C4C')
          .setAuthor({
            name: 'Parece que esse comando n√£o est√° registrado.',
            iconURL: 'http://bit.ly/4aIyY9j',
          });

        return message.reply({ embeds: [embedErroMinimo] });
      }

      
      const embed = new EmbedBuilder()
        .setColor(0x00ff00)
        .setTitle(`Informa√ß√µes do Comando: \`${command.name}\``)
        .setDescription(command.description || 'Nenhuma descri√ß√£o dispon√≠vel.')
        .addFields(
          { name: 'Uso', value: command.usage || 'N√£o especificado.' },
          { name: 'Permiss√µes Necess√°rias', value: command.permissions || 'Nenhuma' }
        )
        .setFooter({
          text: 'Punishment',
          iconURL: client.user ? client.user.displayAvatarURL() : 'http://bit.ly/4aIyY9j',
        });

      return message.reply({ embeds: [embed] });
    }

   
    const embed = new EmbedBuilder()
      .setColor(0x00aaff)
      .setTitle('üí° Comandos Principais')
      .addFields(
        { name: 'help', value: 'Mostra a lista completa de comandos ou informa√ß√µes detalhadas sobre um comando.', inline: true },
        { name: 'ping', value: 'Mostra os detalhes da conex√£o do bot.', inline: true },
        { name: 'privacy', value: 'Exibe a pol√≠tica de privacidade.', inline: true },
        { name: 'shard', value: 'Informa√ß√µes do shard.', inline: true },
        { name: 'stats', value: 'Exibe as estat√≠sticas do bot.', inline: true },
        { name: 'undo', value: 'Desfaz o √∫ltimo comando executado.', inline: true }
      )
      .addFields(
        { name: '\u200b', value: '‚ùì Use `.help <comando>` para ver mais informa√ß√µes sobre um comando.' },
        { name: '\u200b', value: 'üì® Precisa de ajuda? [Servidor de Suporte](https://discord.gg/exemplo)' }
      )
      .setFooter({
        text: 'Punishment',
        iconURL: client.user ? client.user.displayAvatarURL() : 'http://bit.ly/4aIyY9j',
      });

    return message.reply({ embeds: [embed] });
  },
};